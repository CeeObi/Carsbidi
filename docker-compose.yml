services:
#start postgresdb service from docker repo
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=passw0rd
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  #start mongodb service from docker repo
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=passw0rd
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
  
  #start rabbitmq service from docker repo
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672

  #Building AuctionService from my local file location
  auction-svc:
    image: ceeobi/auction-svc:latest #We assign the image a name here
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq #Assigns the 'rabbitmq' container, above in docker to 'Host in RabbitMq in Configfile'
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=passw0rd;Database=auctions
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    depends_on: #Services above
      - postgres
      - rabbitmq     

  #Building SearchService from my local file location
  search-svc:
    image: ceeobi/search-svc:latest 
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbDefaultConnection=mongodb://root:passw0rd@mongo
      - IdentityServiceUrl=http://identity-svc
      - AuctionServiceUrl:http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - mongo
      - rabbitmq 
      #- auction-svc => No need because resilence is already setup
  
  #Building IdentityService from my local file location
  identity-svc:
    image: ceeobi/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
      #
    deploy:
      resources:
        limits:
          memory: 8GB
        reservations:
          memory: 2GB
      #
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=passw0rd;Database=identity
    ports:
      - 5000:80
    depends_on:
      - postgres

  gateway-svc:
    image: ceeobi/gateway-svc:latest 
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80

    

volumes:
  pgdata:
  mongodata:
      